#Step1: Downlaod the Selenium Server jar file 
#Step2: Place the Server jar file in 2 machines 
#Step3: In machine 1: Open command Prompt > Navigate to the Server jar file location
#Step4: To start the GRID hub : In command prompt type: java -jar selenium-server-standalone-3.141.59.jar -role hub
#step5: verify hub is running or not by opening URL : http://<system-ip-address>:4444/grid/console

#Step6: In machine 2 also verify hub URL is accessible or not : 
  http://<hub-system-ip-address-machine1>:4444/grid/console
  e.g: http://10.1.249.52:4444/grid/console

#Step7: In machine 2 :  Open command Prompt > Navigate to the Server jar file location

#Step8: To register a node to Hub: 

java -Dwebdriver.chrome.driver="<path of the chrome driver>\chromedriver.exe" -jar selenium-server-standalone-3.141.59.jar -role webdriver -hub http://<hub-system-ip-address-machine1>:4444/grid/register -port 4444

e.g: java -Dwebdriver.chrome.driver="C:\chromedriver.exe" -jar selenium-server-standalone-3.141.59.jar -role webdriver -hub http://10.1.249.52:4444/grid/register -port 4444

#Code to run

public class SeleniumGrid {

	String appURL = "https://opensource-demo.orangehrmlive.com/";
	String nodeURL = "http://10.1.249.52:5555/wd/hub";
	WebDriver driver;

	public static void main(String[] args) throws MalformedURLException {
		new SeleniumGrid().browserSetup();

	}

	public void browserSetup() throws MalformedURLException {
		DesiredCapabilities caps = new DesiredCapabilities();
		caps.setBrowserName("chrome");
		caps.setPlatform(Platform.XP);

		driver = new RemoteWebDriver(new URL(nodeURL), caps);
		driver.get(appURL);
		driver.manage().window().maximize();
	}

}
